package main

//인터페이스 기본

import "fmt"

type test interface{} //빈 인터페이스

func main() {
	// 인터페이스
	/*
	   객체의 동작을 표현하는 골격
	   단순히 동작에 대한 방법만 표시
	   추상화 제공
	   인터페이스의 메소드를 구현한 타입은 인터페이스로 사용 가능
	   Go언어를 유연하게 사용 가능 -> *** 덕타이핑: Go언어의 독창적인 특징 ***
	   인터페이스 -> 자바(전략패턴, 템플릿 메소드패턴, 팩토리 메소드 패턴, 어댑터 패턴......)
	   클래스 간의 결합도 감소 (유지보수성 향상, 기능 추가의 용의성, 독립적인 프로그래밍 가능)
	*/

	//예제1
	/*
	   type 인터페이스명 interface {
	     메서드1() 반환 값(타입 형)
	     메서드2()  //반환값 없는 경우
	   }
	*/
	var t test
	fmt.Println("ex1 : ", t) //빈 인터페이스인 경우 Nil 리턴 (구조체와 같음)
}
